<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
  http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

  <changeSet author="vpawar" id="PV: procedure to init value IDs" dbms="mysql" runOnChange="true">
    <sql>drop procedure if exists set_pv_ids;</sql>

    <sql endDelimiter="//">
      create procedure set_pv_ids(
        in data_table varchar(30),
        in old_column varchar(30),
        in new_column varchar(30),
        in attribute  varchar(64)
      )
      begin
        set @set_ids = concat(
          'update ',
             data_table, ' d',
          '  inner join catissue_permissible_value pv '
          '    on pv.value = d.', old_column, ' and pv.public_id = \'', attribute, '\'',
          'set ',
          '  d.', new_column, ' = pv.identifier ');

        prepare set_ids from @set_ids;
        execute set_ids;
        deallocate prepare set_ids;
      end;
      //
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: procedure to init leaf value IDs" dbms="mysql" runOnChange="true">
    <sql>drop procedure if exists set_leaf_pv_ids;</sql>

    <sql endDelimiter="//">
      create procedure set_leaf_pv_ids(
        in data_table varchar(30),
        in old_column varchar(30),
        in new_column varchar(30),
        in attribute  varchar(64)
      )
      begin
        set @set_ids = concat(
          'update ',
             data_table, ' d',
          '  inner join catissue_permissible_value pv '
          '    on pv.value = d.', old_column, ' and pv.public_id = \'', attribute, '\'',
          '  left join catissue_permissible_value cv ',
          '    on cv.parent_identifier = pv.identifier ',
          'set ',
          '  d.', new_column, ' = pv.identifier ',
          'where ',
          '  cv.identifier is null');

        prepare set_ids from @set_ids;
        execute set_ids;
        deallocate prepare set_ids;
      end;
      //
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: procedure to init value IDs" dbms="oracle" runOnChange="true">
    <sql endDelimiter="//">
      create or replace procedure set_pv_ids(
        data_table in varchar2,
        old_column in varchar2,
        new_column in varchar2,
        attribute in varchar2
      ) AUTHID CURRENT_USER is
      begin
        execute immediate '
          merge into
          ' || data_table || ' d
          using (
            select
              pv.*
            from
              catissue_permissible_value pv
            where
              pv.public_id = ''' || attribute || '''
          ) t on (t.value = d.' || old_column || ')
          when matched then
            update set d.' || new_column || ' = t.identifier';
      end;
      //
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: procedure to init leaf value IDs" dbms="oracle" runOnChange="true">
    <sql endDelimiter="//">
      create or replace procedure set_leaf_pv_ids(
        data_table in varchar2,
        old_column in varchar2,
        new_column in varchar2,
        attribute in varchar2
      ) AUTHID CURRENT_USER is
      begin
        execute immediate '
          merge into
          ' || data_table || ' d
          using (
            select
              pv.*
            from
              catissue_permissible_value pv
              left join catissue_permissible_value cv on cv.parent_identifier = pv.identifier
            where
              pv.public_id = ''' || attribute || ''' and
              cv.identifier is null
          ) t on (t.value = d.' || old_column || ')
          when matched then
            update set d.' || new_column || ' = t.identifier';
      end;
      //
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen requirement anatomic site">
    <sql>call set_leaf_pv_ids('catissue_cp_req_specimen', 'tissue_site', 'anatomic_site_id', 'anatomic_site');</sql>
    <sql>call set_leaf_pv_ids('catissue_cp_req_specimen_aud', 'tissue_site', 'anatomic_site_id', 'anatomic_site');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen requirement laterality">
    <sql>call set_pv_ids('catissue_cp_req_specimen', 'tissue_side', 'laterality_id', 'laterality');</sql>
    <sql>call set_pv_ids('catissue_cp_req_specimen_aud', 'tissue_side', 'laterality_id', 'laterality');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen requirement class">
    <sql>call set_pv_ids('catissue_cp_req_specimen', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('catissue_cp_req_specimen_aud', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Update not specified specimen type PVs" dbms="oracle">
    <sql>
      merge into
        catissue_permissible_value d
      using (
        select
          pv.identifier, pv.value
        from
          catissue_permissible_value pv
        where
          pv.public_id = 'specimen_type' and
          pv.parent_identifier is null
      ) t on (t.identifier = d.parent_identifier)
      when matched then
        update
          set d.value = concat(t.value, concat(' - ', d.value))
        where
          d.value = 'Not Specified'
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Update not specified specimen type PVs" dbms="mysql">
    <sql>
      update
        catissue_permissible_value d
        inner join catissue_permissible_value t on t.identifier = d.parent_identifier
      set
        d.value = concat(t.value, concat(' - ', d.value))
      where
        d.public_id = 'specimen_type' and
        d.value = 'Not Specified' and
        t.parent_identifier is null
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Update specimen requirement - Not Specified type" runOnChange="true">
    <sql>
      update
        catissue_cp_req_specimen
      set
        specimen_type = concat(specimen_class, concat(' - ', specimen_type))
      where
        specimen_type = 'Not Specified'
    </sql>
    <sql>
      update
        catissue_cp_req_specimen_aud
      set
        specimen_type = concat(specimen_class, concat(' - ', specimen_type))
      where
        specimen_type = 'Not Specified'
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen requirement type">
    <sql>call set_pv_ids('catissue_cp_req_specimen', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('catissue_cp_req_specimen_aud', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen requirement path status">
    <sql>call set_pv_ids('catissue_cp_req_specimen', 'pathological_status', 'pathological_status_id', 'pathology_status');</sql>
    <sql>call set_pv_ids('catissue_cp_req_specimen_aud', 'pathological_status', 'pathological_status_id', 'pathology_status');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen requirement collection procedure">
    <sql>call set_pv_ids('catissue_cp_req_specimen', 'collection_procedure', 'collection_procedure_id', 'collection_procedure');</sql>
    <sql>call set_pv_ids('catissue_cp_req_specimen_aud', 'collection_procedure', 'collection_procedure_id', 'collection_procedure');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen requirement collection container">
    <sql>call set_pv_ids('catissue_cp_req_specimen', 'collection_container', 'collection_container_id', 'collection_container');</sql>
    <sql>call set_pv_ids('catissue_cp_req_specimen_aud', 'collection_container', 'collection_container_id', 'collection_container');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen anatomic site">
    <sql>call set_leaf_pv_ids('catissue_specimen', 'tissue_site', 'anatomic_site_id', 'anatomic_site');</sql>
    <sql>call set_leaf_pv_ids('catissue_specimen_aud', 'tissue_site', 'anatomic_site_id', 'anatomic_site');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen laterality">
    <sql>call set_pv_ids('catissue_specimen', 'tissue_side', 'laterality_id', 'laterality');</sql>
    <sql>call set_pv_ids('catissue_specimen_aud', 'tissue_side', 'laterality_id', 'laterality');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen class">
    <sql>call set_pv_ids('catissue_specimen', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('catissue_specimen_aud', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Update specimen - Not Specified type" runOnChange="true">
    <sql>
      update
        catissue_specimen
      set
        specimen_type = concat(specimen_class, concat(' - ', specimen_type))
      where
        specimen_type = 'Not Specified'
    </sql>
    <sql>
      update
        catissue_specimen_aud
      set
        specimen_type = concat(specimen_class, concat(' - ', specimen_type))
      where
        specimen_type = 'Not Specified'
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen type">
    <sql>call set_pv_ids('catissue_specimen', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('catissue_specimen_aud', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen path status">
    <sql>call set_pv_ids('catissue_specimen', 'pathological_status', 'pathological_status_id', 'pathology_status');</sql>
    <sql>call set_pv_ids('catissue_specimen_aud', 'pathological_status', 'pathological_status_id', 'pathology_status');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen biohazards">
    <sql>call set_pv_ids('os_specimen_biohazards', 'biohazard', 'biohazard_id', 'specimen_biohazard');</sql>
    <sql>call set_pv_ids('os_specimen_biohazards_aud', 'biohazard', 'biohazard_id', 'specimen_biohazard');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen collection procedure">
    <sql>call set_pv_ids('catissue_coll_event_param', 'collection_procedure', 'collection_procedure_id', 'collection_procedure');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen collection container">
    <sql>call set_pv_ids('catissue_coll_event_param', 'container', 'collection_container_id', 'collection_container');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Specimen received quality">
    <sql>call set_pv_ids('catissue_received_event_param', 'received_quality', 'received_quality_id', 'receive_quality');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Container specimen class restriction">
    <sql>call set_pv_ids('os_stor_cont_spec_classes', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('os_stor_cont_comp_spec_classes', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('os_stor_cont_spec_classes_aud', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: Container specimen type restriction">
    <sql>call set_pv_ids('os_stor_cont_spec_types', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('os_stor_cont_comp_spec_types', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('os_stor_cont_spec_types_aud', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: CPE fields">
    <sql>call set_pv_ids('catissue_coll_prot_event', 'clinical_status', 'clinical_status_id', 'clinical_status');</sql>
    <sql>call set_pv_ids('catissue_coll_prot_event', 'clinical_diagnosis', 'clinical_diagnosis_id', 'clinical_diagnosis');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: audited CPE fields">
    <sql>call set_pv_ids('catissue_coll_prot_event_aud', 'clinical_status', 'clinical_status_id', 'clinical_status');</sql>
    <sql>call set_pv_ids('catissue_coll_prot_event_aud', 'clinical_diagnosis', 'clinical_diagnosis_id', 'clinical_diagnosis');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: visit fields">
    <sql>call set_pv_ids('catissue_specimen_coll_group', 'clinical_status', 'clinical_status_id', 'clinical_status');</sql>
    <sql>call set_pv_ids('catissue_specimen_coll_group', 'cohort', 'cohort_id', 'cohort');</sql>
    <sql>call set_pv_ids('catissue_specimen_coll_group', 'missed_reason', 'missed_reason_id', 'missed_visit_reason');</sql>
    <sql>call set_pv_ids('os_visit_clin_diagnoses', 'clinical_diagnosis', 'clinical_diagnosis_id', 'clinical_diagnosis');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: audited visit fields ">
    <sql>call set_pv_ids('cat_specimen_coll_group_aud', 'clinical_status', 'clinical_status_id', 'clinical_status');</sql>
    <sql>call set_pv_ids('cat_specimen_coll_group_aud', 'cohort', 'cohort_id', 'cohort');</sql>
    <sql>call set_pv_ids('cat_specimen_coll_group_aud', 'missed_reason', 'missed_reason_id', 'missed_visit_reason');</sql>
    <sql>call set_pv_ids('os_visit_clin_diagnoses_aud', 'clinical_diagnosis', 'clinical_diagnosis_id', 'clinical_diagnosis');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: participant fields">
    <sql>call set_pv_ids('catissue_participant', 'vital_status', 'vital_status_id', 'vital_status');</sql>
    <sql>call set_pv_ids('catissue_participant', 'gender', 'gender_id', 'gender');</sql>
    <sql>call set_pv_ids('catissue_race', 'race_name', 'race_id', 'race');</sql>
    <sql>call set_pv_ids('os_participant_ethnicities', 'ethnicity', 'ethnicity_id', 'ethnicity');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: audited participant fields">
    <sql>call set_pv_ids('catissue_participant_aud', 'vital_status', 'vital_status_id', 'vital_status');</sql>
    <sql>call set_pv_ids('catissue_participant_aud', 'gender', 'gender_id', 'gender');</sql>
    <sql>call set_pv_ids('catissue_race_aud', 'race_name', 'race_id', 'race');</sql>
    <sql>call set_pv_ids('os_participant_ethnicities_aud', 'ethnicity', 'ethnicity_id', 'ethnicity');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: specimen events">
    <sql>call set_pv_ids('catissue_embedded_event_param', 'embedding_medium', 'embedding_medium_id', 'embedding_medium');</sql>
    <sql>call set_pv_ids('catissue_fixed_event_param', 'fixation_type', 'fixation_type_id', 'fixation_type');</sql>
    <sql>call set_pv_ids('catissue_frozen_event_param', 'method', 'method_id', 'frozen_method');</sql>
    <sql>call set_pv_ids('catissue_tis_spe_event_param', 'histological_quality', 'histological_quality_id', 'histological_quality');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: site type">
    <sql>call set_pv_ids('catissue_site', 'type', 'type_id', 'site_type');</sql>
    <sql>call set_pv_ids('catissue_site_aud', 'type', 'type_id', 'site_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: consent response">
    <sql>call set_pv_ids('catissue_consent_tier_response', 'response', 'response_id', 'consent_response');</sql>
    <sql>call set_pv_ids('cat_consent_tier_response_aud', 'response', 'response_id', 'consent_response');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: shipment specimen received quality">
    <sql>call set_pv_ids('os_shipment_specimens', 'received_quality', 'received_quality_id', 'shipment_item_received_quality');</sql>
    <sql>call set_pv_ids('os_shipment_specimens_aud', 'received_quality', 'received_quality_id', 'shipment_item_received_quality');</sql>
  </changeSet>

  <changeSet author="vpawar" id="PV: shipment container received quality">
    <sql>call set_pv_ids('os_shipment_containers', 'received_quality', 'received_quality_id', 'shipment_item_received_quality');</sql>
    <sql>call set_pv_ids('os_shipment_containers_aud', 'received_quality', 'received_quality_id', 'shipment_item_received_quality');</sql>
  </changeSet>

  <changeSet author="vpawar" id="DP requirement: specimen type">
    <sql>call set_pv_ids('os_dp_requirements', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('os_dp_requirements_aud', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
  </changeSet>

  <changeSet author="vpawar" id="DP requirement: anatomic site">
    <sql>call set_leaf_pv_ids('os_dp_requirements', 'anatomic_site', 'anatomic_site_id', 'anatomic_site');</sql>
    <sql>call set_leaf_pv_ids('os_dp_requirements_aud', 'anatomic_site', 'anatomic_site_id', 'anatomic_site');</sql>
  </changeSet>

  <changeSet author="vpawar" id="DP requirement: clinical diagnosis">
    <sql>call set_pv_ids('os_dp_requirements', 'clinical_daignosis', 'clinical_diagnosis_id', 'clinical_diagnosis');</sql>
    <sql>call set_pv_ids('os_dp_requirements_aud', 'clinical_daignosis', 'clinical_diagnosis_id', 'clinical_diagnosis');</sql>
  </changeSet>

  <changeSet author="vpawar" id="DP requirement: pathology status">
    <sql>call set_pv_ids('os_dpr_pathology_statuses', 'pathology_status', 'pathology_status_id', 'pathology_status');</sql>
    <sql>call set_pv_ids('os_dpr_pathology_statuses_aud', 'pathology_status', 'pathology_status_id', 'pathology_status');</sql>
  </changeSet>

  <changeSet author="vpawar" id="Anticipated specimens: visit PV attributes">
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'clinical_status', 'clinical_status_id', 'clinical_status');</sql>
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'clinical_diagnosis', 'clinical_diagnosis_id', 'clinical_diagnosis');</sql>
  </changeSet>

  <changeSet author="vpawar" id="Anticipated specimens: not specified type" runOnChange="true">
    <preConditions onFail="MARK_RAN">
      <columnExists tableName="os_cpr_anticipated_spmns" columnName="specimen_type"/>
    </preConditions>
    <sql>
      update
        os_cpr_anticipated_spmns
      set
        specimen_type = concat(specimen_class, concat(' - ', specimen_type))
      where
        specimen_type = 'Not Specified'
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="Anticipated specimens: specimen PV attributes">
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'specimen_class', 'specimen_class_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'specimen_type', 'specimen_type_id', 'specimen_type');</sql>
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'anatomic_site', 'anatomic_site_id', 'anatomic_site');</sql>
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'laterality', 'laterality_id', 'laterality');</sql>
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'path_status', 'path_status_id', 'pathology_status');</sql>
  </changeSet>

  <changeSet author="vpawar" id="Anticipated specimens: specimen PV attributes - 2">
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'collection_container', 'collection_container_id', 'collection_container');</sql>
    <sql>call set_pv_ids('os_cpr_anticipated_spmns', 'collection_procedure', 'collection_procedure_id', 'collection_procedure');</sql>
  </changeSet>

  <changeSet author="vpawar" id="Migrate printed specimen label item IDs" dbms="mysql">
    <sql>
      update
        os_label_print_job_items ji
        inner join os_label_print_jobs j on j.identifier = ji.job_id
        inner join catissue_specimen s on s.label = ji.item_label
      set
        ji.item_id = s.identifier
      where
        j.item_type = 'specimen'
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="Migrate printed specimen label item IDs" dbms="oracle">
    <sql>
      merge into
        os_label_print_job_items ji
      using(
        select
          s.label, sj.identifier as job_id, min(s.identifier) as identifier
        from
          catissue_specimen s
          inner join os_label_print_job_items si on si.item_label = s.label
          inner join os_label_print_jobs sj on sj.identifier = si.job_id
        where
          sj.item_type = 'specimen'
        group by
          s.label, sj.identifier
      ) spmn on (spmn.label = ji.item_label and spmn.job_id = ji.job_id)
      when matched then
        update set ji.item_id = spmn.identifier
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="Migrate printed visit name item IDs" dbms="mysql">
    <sql>
      update
        os_label_print_job_items ji
        inner join os_label_print_jobs j on j.identifier = ji.job_id
        inner join catissue_specimen_coll_group v on v.name = ji.item_label
      set
        ji.item_id = v.identifier
      where
        j.item_type = 'visit'
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="Migrate printed visit name item IDs" dbms="oracle">
    <sql>
      merge into
        os_label_print_job_items ji
      using(
        select
          v.name, vj.identifier as job_id, min(v.identifier) as identifier
        from
          catissue_specimen_coll_group v
          inner join os_label_print_job_items vi on vi.item_label = v.name
          inner join os_label_print_jobs vj on vj.identifier = vi.job_id
        where
          vj.item_type = 'visit'
        group by
          v.name, vj.identifier
      ) visit on (visit.name = ji.item_label and visit.job_id = ji.job_id)
      when matched then
        update set ji.item_id = visit.identifier
    </sql>
  </changeSet>

  <changeSet author="vpawar" id="Migrate printed container and distribution label item IDs">
    <sql>
      update
        os_label_print_job_items
      set
        item_id = cast(item_label as decimal)
      where
        job_id in (
          select
            identifier
          from
            os_label_print_jobs
          where
            item_type in ('storage_container', 'distribution_order_item')
        )
    </sql>
  </changeSet>
</databaseChangeLog>
